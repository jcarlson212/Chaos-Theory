{"version":3,"sources":["logo.svg","lorenz.jpg","Lorenzsimulation.mov","lorenz_x_vs_t.jpg","lorenz_y_vs_t.jpg","lorenz_z_vs_t.jpg","Lorenz.js","discrete_iteration_stable.jpg","iterations_pt_2.jpg","iterations_pt_3.jpg","stable_iterations.jpg","shartoski.PNG","shark_ex_3_pt.jpg","shark_ex_diff_eqn.jpg","Discrete.js","Home.js","Applications.js","chaos_100_simulations.jpg","chaos_1000_simulations.jpg","chaos_10000_simulations.jpg","chaos_line_graph_100_iterations.jpg","chaos_line_graph_1000_iterations.jpg","new_double_map.jpg","new_tent_map_chaos.jpg","MotivationChaos.js","App.js","reportWebVitals.js","index.js"],"names":["Lorenz","state","render","Jumbotron","fluid","Container","src","lorenz","style","maxWidth","Provider","playsInline","poster","Lorenzsimulation","muted","autoPlay","disableCompletely","lorenz_x_vs_t","border","lorenz_y_vs_t","lorenz_z_vs_t","React","Component","dynamic_def","Discrete","Node","formula","inline","discrete_iteration_stable","iterations_pt_2","iterations_pt_3","stable_iterations","shartoski","shark_ex_3_pt","shark_ex_diff_eqn","particle_container_height","particle_container_width","Home","data_red","data_blue","f","num","g","modify_particles","i","data_red_new","x","Math","floor","y","data_blue_new","setState","new_red_data","new_blue_data","height","width","data","color","push","random","setInterval","Applications","MotivationChaos","textAlign","chaos_100_simulations","chaos_1000_simulations","chaos_10000_simulations","chaos_line_graph_100_iterations","chaos_line_graph_1000_iterations","new_double_map","new_tent_map_chaos","App","page","load_page","page_component","className","Navbar","bg","variant","Brand","href","onClick","Nav","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.410b2cb0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/lorenz.a2144680.jpg\";","export default __webpack_public_path__ + \"static/media/Lorenzsimulation.e0f9719b.mov\";","export default __webpack_public_path__ + \"static/media/lorenz_x_vs_t.2c775a13.jpg\";","export default __webpack_public_path__ + \"static/media/lorenz_y_vs_t.c41fae6a.jpg\";","export default __webpack_public_path__ + \"static/media/lorenz_z_vs_t.d2b15dfa.jpg\";","import { Jumbotron, Container } from 'react-bootstrap';\r\nimport './App.css';\r\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { Player, ControlBar } from 'video-react';\r\nimport MathJax from 'react-mathjax'\r\nimport lorenz from './lorenz.jpg';\r\nimport Lorenzsimulation from './Lorenzsimulation.mov';\r\nimport lorenz_x_vs_t from './lorenz_x_vs_t.jpg';\r\nimport lorenz_y_vs_t from './lorenz_y_vs_t.jpg';\r\nimport lorenz_z_vs_t from './lorenz_z_vs_t.jpg';\r\n\r\nclass Lorenz extends React.Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    render = () => {\r\n      return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>Lorenz</h1>\r\n                    <i>\r\n                    In this section we will go over the history of Lorenz and his equations\r\n                    </i>\r\n                    <br/><br/>\r\n                    <img src={lorenz} style={{maxWidth: \"70%\"}} />\r\n                    <MathJax.Provider>\r\n                        <div>\r\n                        <Player\r\n                            playsInline\r\n                            poster=\"/assets/poster.png\"\r\n                            src={Lorenzsimulation}\r\n                            muted={true}\r\n                            autoPlay={true}\r\n                            playsInline={true}\r\n\r\n                        >\r\n                            <ControlBar disableCompletely={true} />\r\n                        </Player>\r\n\r\n                        <img src={lorenz_x_vs_t} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                        <img src={lorenz_y_vs_t} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                        <img src={lorenz_z_vs_t} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                        </div>\r\n\r\n                    </MathJax.Provider>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Lorenz;\r\n  ","export default __webpack_public_path__ + \"static/media/discrete_iteration_stable.3e9d04b9.jpg\";","export default __webpack_public_path__ + \"static/media/iterations_pt_2.4f848f38.jpg\";","export default __webpack_public_path__ + \"static/media/iterations_pt_3.9911ba8c.jpg\";","export default __webpack_public_path__ + \"static/media/stable_iterations.41c3c963.jpg\";","export default __webpack_public_path__ + \"static/media/shartoski.6a673089.PNG\";","export default __webpack_public_path__ + \"static/media/shark_ex_3_pt.d5397434.jpg\";","export default __webpack_public_path__ + \"static/media/shark_ex_diff_eqn.735fb62e.jpg\";","import './App.css';\r\nimport { Jumbotron, Container, Image } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport MathJax from 'react-mathjax'\r\nimport discrete_iteration_stable from './discrete_iteration_stable.jpg';\r\nimport iterations_pt_2 from './iterations_pt_2.jpg';\r\nimport iterations_pt_3 from './iterations_pt_3.jpg';\r\nimport stable_iterations from './stable_iterations.jpg';\r\nimport shartoski from './shartoski.PNG';\r\nimport shark_ex_3_pt from './shark_ex_3_pt.jpg';\r\nimport shark_ex_diff_eqn from './shark_ex_diff_eqn.jpg';\r\n\r\nconst tex = `f(x) = \\\\int_{-\\\\infty}^\\\\infty\r\n\\\\hat f(\\\\xi)\\\\,e^{2 \\\\pi i \\\\xi x}\r\n\\\\,d\\\\xi`\r\n\r\nconst dynamic_def = `x_{n+1} = f(x_{n})`\r\n\r\nclass Discrete extends React.Component {\r\n    state = {\r\n        \r\n    }\r\n    render = () => {\r\n      return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>Discrete Dynamical Systems</h1>\r\n                    <i>\r\n                    In this section we will go over the basics of Discrete Dynamical Systems\r\n                    </i>\r\n                    <br/><br/>\r\n                    <MathJax.Provider>\r\n                        <div>\r\n                            <p>To start, we present the basic definition of a discrete dynamical system:</p>\r\n                            <p>Definition 1. A discrete dynamical system is given by the equation <MathJax.Node formula={dynamic_def} />\r\n                                where <MathJax.Node inline formula={`f: M \\\\rightarrow M`} /> for any arbitrary metric space <MathJax.Node inline formula={`M`} />\r\n                                and <MathJax.Node inline formula={`n \\\\in \\\\mathbf{N}`} />\r\n                            </p>\r\n                            <p>For the remainder of our discussion, we will always assume <MathJax.Node inline formula={`f`} /> is a continuous function\r\n                                and <MathJax.Node inline formula={`M = R^{n}`} />\r\n                            </p>\r\n                            <p>Proposition 2. Let <MathJax.Node inline formula={`f \\\\in C^{1}(\\\\mathbf{R})`} /> and have a fixed point <MathJax.Node inline formula={`x_{0}`} />.\r\n                                Then <MathJax.Node inline formula={`x_0{}`} /> is a sink if <MathJax.Node inline formula={`|f'(x_{0})| < 1`} />, a source if <MathJax.Node inline formula={`|f'(x_{0})| > 1`} />,\r\n                                and otherwise we cannot conclude anything.\r\n                            </p>\r\n                            <p>\r\n                                Proof: This proposition is pretty trivial. Just choose <MathJax.Node inline formula={`\\\\delta > 0`} /> s.t. <MathJax.Node inline formula={`|f'(x) - f'(x_{0})| < \\\\epsilon`} /> for all <MathJax.Node inline formula={`x \\\\in B_{\\\\delta}(x_{0})`} />. Then\r\n                                we can assume <MathJax.Node inline formula={`f'(x)`} /> has the same sign as <MathJax.Node inline formula={`f'(x_{0})`} /> for <MathJax.Node inline formula={`x \\\\in B_{\\\\delta}(x_{0})`} />. Thus, for <MathJax.Node inline formula={`x \\\\in B_{\\\\delta}(x_{0})`} />\r\n                                we have <MathJax.Node inline formula={`|x-x_{0}|\\\\cdot (|f'(x_{0})| - \\\\epsilon) \\\\leq |f(x) - f(x_{0})| \\\\leq |x-x_{0}|\\\\cdot (|f'(x_{0})| + \\\\epsilon) `} />. If <MathJax.Node inline formula={`|f'(x_{0})| > 1`} />, we get the\r\n                                difference between the <MathJax.Node inline formula={`f`} /> values in absolute value is larger than the absolute difference in the <MathJax.Node inline formula={`x`} /> values. The opposite happens if <MathJax.Node inline formula={`|f'(x_{0})|<1`} />.\r\n                                <br/>\r\n\r\n                                When <MathJax.Node inline formula={`|f'(x_{0})| = 1`} />, things become too sensitive (the derivitive can immediately become larger or smaller in absolute value). So we can't really\r\n                                conclude anything. The following examples illustrate this:\r\n                            </p>\r\n                            <img src={discrete_iteration_stable} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/>\r\n                            <img src={iterations_pt_2} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/>\r\n                            <img src={iterations_pt_3} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/>\r\n                            <p>Below we have an example of a stable point for <MathJax.Node inline formula={`f(x) = 1.5\\\\cdot \\\\sin(x-1)`} /> at <MathJax.Node inline formula={`x_{0} = -1.20675`} />. Since <MathJax.Node inline formula={`f'(x) = 1.5\\\\cdot \\\\cos(x-1)`} />, \r\n                            <MathJax.Node inline formula={`|f'(x_{0})| = |-.89| < 1`} /> - so by our proposition this should be a stable fixed point, as the following picture shows:\r\n                             </p>\r\n                            <img src={stable_iterations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n\r\n                            <p>Sharkovskii Theorem. Let <MathJax.Node inline formula={`f: I \\\\to I`} /> continuous for some interval <MathJax.Node inline formula={`I \\\\subset R`} />. Consider\r\n                            the following ordering of the natural numbers (which is a total order, but not well-ordered):\r\n                            </p>\r\n                            <img src={shartoski} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <p>If <MathJax.Node inline formula={`f`} /> has a periodic point of length m then <MathJax.Node inline formula={`f`} /> will have a periodic point of length n for all\r\n                            <MathJax.Node inline formula={`n > m`} />.\r\n                            </p>\r\n                            <p>The following is an example of a function with a period of length three (<MathJax.Node inline formula={`f(x)=-\\\\frac{19}{30}x^{2}+\\\\frac{51}{10}-\\\\frac{8}{3}`} />):</p>\r\n                            <img src={shark_ex_3_pt} style={{maxWidth: \"70%\", border:\"2px solid black\"}}/>\r\n                            <br/>\r\n                            <br/>\r\n                            <p>Here is another way of visualizing it:</p>\r\n                            <img src={shark_ex_diff_eqn} style={{maxWidth: \"70%\", border:\"2px solid black\"}}/>\r\n                        </div>\r\n\r\n                    </MathJax.Provider>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Discrete;\r\n  ","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport {XYPlot, LineSeries, MarkSeries, HeatmapSeries} from 'react-vis';\r\n\r\nconst particle_container_height = 700;\r\nconst particle_container_width = 1000;\r\nconst particle_count = 50;\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        data_red: [],\r\n        data_blue: []\r\n    }\r\n\r\n    constructor(){\r\n        super()\r\n        let data_red = []\r\n        let i=0;\r\n        for(i =0; i < particle_count; i++){\r\n            data_red.push({\r\n                x: Math.random()*particle_container_width/2,\r\n                y: Math.random()*particle_container_height\r\n            })\r\n        }\r\n        let data_blue = []\r\n        i=0;\r\n        for(i =0; i < particle_count; i++){\r\n            data_blue.push({\r\n                x: Math.random()*particle_container_width/2 + particle_container_width/2,\r\n                y: Math.random()*particle_container_height\r\n            })\r\n        }\r\n        this.state.data_red = data_red\r\n        this.state.data_blue = data_blue\r\n        setInterval(this.modify_particles, 200);\r\n    }\r\n\r\n    f = (num) => {\r\n        num = num / (1.0*particle_container_width);\r\n        num = 4.0*num*(1 - num);\r\n        num = num*particle_container_width;\r\n        return num;\r\n    }\r\n\r\n    g = (num) => {\r\n        num = num / (1.0*particle_container_height);\r\n        num = 4.0*num*(1 - num);\r\n        num = num*particle_container_height;\r\n        return num;\r\n    }\r\n\r\n    modify_particles = () => {\r\n        let data_red_new = this.state.data_red;\r\n        let i;\r\n        for(i =0; i < particle_count; i++){\r\n            data_red_new[i] = {\r\n                x: Math.floor(this.f(data_red_new[i].x)),\r\n                y: Math.floor(this.g(data_red_new[i].y))\r\n            };\r\n        }\r\n        let data_blue_new = this.state.data_blue;\r\n        for(i =0; i < particle_count; i++){\r\n            data_blue_new[i] = {\r\n                x: Math.floor(this.f(data_blue_new[i].x)),\r\n                y: Math.floor(this.g(data_blue_new[i].y))\r\n            };\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            data_red: data_red_new,\r\n            data_blue: data_blue_new\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        const new_red_data = this.state.data_red;\r\n        const new_blue_data = this.state.data_blue;\r\n        return (\r\n            <div>\r\n                <Jumbotron fluid>\r\n                    <Container>\r\n                        <h1>Chaos</h1>\r\n                        <p>\r\n                        This is a website we made for our final project on Chaos Theory\r\n                        </p>\r\n                        <XYPlot height={particle_container_height} width={particle_container_width}>\r\n                            <HeatmapSeries data={new_red_data} color=\"black\" />\r\n                            <HeatmapSeries data={new_blue_data} color=\"red\" />\r\n                        </XYPlot>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n  \r\n  export default Home;\r\n  ","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\r\nimport React from 'react';\r\n\r\nclass Applications extends React.Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    render = () => {\r\n      return (\r\n        <div>\r\n            Applications page\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Applications;\r\n  ","export default __webpack_public_path__ + \"static/media/chaos_100_simulations.9f005df9.jpg\";","export default __webpack_public_path__ + \"static/media/chaos_1000_simulations.a3bf0692.jpg\";","export default __webpack_public_path__ + \"static/media/chaos_10000_simulations.e7f81830.jpg\";","export default __webpack_public_path__ + \"static/media/chaos_line_graph_100_iterations.f3d67590.jpg\";","export default __webpack_public_path__ + \"static/media/chaos_line_graph_1000_iterations.9871f1dc.jpg\";","export default __webpack_public_path__ + \"static/media/new_double_map.a33797ce.jpg\";","export default __webpack_public_path__ + \"static/media/new_tent_map_chaos.078d8f2e.jpg\";","import { Jumbotron, Container, Image } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport MathJax from 'react-mathjax'\r\nimport './App.css';\r\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\r\nimport chaos_100_simulations from './chaos_100_simulations.jpg'\r\nimport chaos_1000_simulations from './chaos_1000_simulations.jpg'\r\nimport chaos_10000_simulations from './chaos_10000_simulations.jpg'\r\nimport chaos_line_graph_100_iterations from './chaos_line_graph_100_iterations.jpg'\r\nimport chaos_line_graph_1000_iterations from './chaos_line_graph_1000_iterations.jpg'\r\nimport new_double_map from './new_double_map.jpg'\r\nimport new_tent_map_chaos from './new_tent_map_chaos.jpg'\r\n\r\nclass MotivationChaos extends React.Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    render = () => {\r\n      return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>Chaos Theory</h1>\r\n                    <i>\r\n                    In this section we will go over the main reasons Chaos Theory is worthwhile\r\n                    </i>\r\n                    <br/><br/>\r\n                    <MathJax.Provider>\r\n                        <div>\r\n                            <p>We begin with the definition of a chaotic function <MathJax.Node inline formula={`f:[a,b] \\\\to [a,b]`} />; such\r\n                             a function is said to be Chaotic if it is continuous and satisfies the following three conditions: </p>\r\n                             <ol style={{textAlign:\"left\"}}>\r\n                                 <li>\r\n                                     Periodic points of <MathJax.Node inline formula={`f`} /> are dense in <MathJax.Node inline formula={`[a,b]`} /> - in other words,\r\n                                     any <MathJax.Node inline formula={`x \\\\in [a,b]`} /> can be approximated by a point <MathJax.Node inline formula={`y \\\\in [a,b]`} /> s.t. \r\n                                     <MathJax.Node inline formula={`y`} /> is periodic <MathJax.Node inline formula={`(f^{m}(y) = y`} /> for some <MathJax.Node inline formula={`m\\\\in \\\\mathbf{N})`} />\r\n                                 </li>\r\n                                 <li>\r\n                                     For any open sets <MathJax.Node inline formula={`U_{1}`} />, <MathJax.Node inline formula={`U_{2}`} /> there exists <MathJax.Node inline formula={`x \\\\in U_{1}`} />\r\n                                     s.t. <MathJax.Node inline formula={`f^{m}(x) \\\\in U_{2}`} /> for some <MathJax.Node inline formula={`m \\\\in \\\\mathbf{N}`} />\r\n                                 </li>\r\n                                 <li>\r\n                                     There exists some <MathJax.Node inline formula={`\\\\beta > 0`} /> s.t. for any <MathJax.Node inline formula={`x_{0} \\\\in [a,b]`} /> and neighborhood <MathJax.Node inline formula={`U`} />\r\n                                     of <MathJax.Node inline formula={`x_{0}`} /> there exists some <MathJax.Node inline formula={`y_{0} \\\\in U`} /> s.t. <MathJax.Node inline formula={`|f(x_{0}) - f(y_{0})| > \\\\beta`} />.\r\n                                 </li>\r\n                             </ol>\r\n                             <p>\r\n                                 Roughly speaking, this means that the initial conditions are sensitive and arbitrarily small regions visit every other region. The initial conditions are sensitive in the sense that\r\n                                 if you try to approximate an input value, that approximation is not guranteed to work nomatter how accurate it is.\r\n                             </p>\r\n                            <img src={chaos_100_simulations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <img src={chaos_1000_simulations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <img src={chaos_10000_simulations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <img src={chaos_line_graph_100_iterations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <img src={chaos_line_graph_1000_iterations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n\r\n                            <img src={new_double_map} style={{maxWidth: \"70%\", border: \"2px solid black\"}} />\r\n                            <img src={new_tent_map_chaos} style={{maxWidth: \"70%\", border: \"2px solid black\"}} />\r\n\r\n                            <p>\r\n                                Lets now consider an interesting map: the shift map. Define the shift map <MathJax.Node inline formula={`T: \\\\{0,1 \\\\}^{\\\\mathbf{N}} \\\\to \\\\{0,1 \\\\}^{\\\\mathbf{N}}`} /> is given by <MathJax.Node inline formula={`T((x_{1}, x_{2},\\\\cdots)) = (x_{2}, x_{3}, \\\\cdots)`} />.\r\n                                To make <MathJax.Node inline formula={`\\\\{0,1 \\\\}^{\\\\mathbf{N}}`} /> a metric space, we will define a metric <MathJax.Node inline formula={`d: \\\\{0,1 \\\\}^{\\\\mathbf{N}} \\\\times \\\\{0,1 \\\\}^{\\\\mathbf{N}} \\\\to \\\\mathbf{R}^{\\\\geq 0}`} /> by <MathJax.Node inline formula={`d((x_{1}, \\\\cdots), (y_{1}, \\\\cdots)) = \\\\sum_{i=1}^{\\\\infty} \\\\frac{1}{2^{i}}|x_{i} - y_{i}|`} />.\r\n                                The fact that this is a metric space is trivial and the fact that the shift map is continuous is a standard exercise. More interestingly, we show that <MathJax.Node inline formula={`T`} /> yeilds a chaotic differential equation:<br/><br/>\r\n                                <ol style={{textAlign: \"left\"}}>\r\n                                    <li>\r\n                                        We first show periodic orbits are dense. To see this, let <MathJax.Node inline formula={`x=(x_{1}, x_{2}, \\\\cdots) \\\\in \\\\{0,1 \\\\}^{\\\\mathbf{N}}`} />. Let <MathJax.Node inline formula={`n_{0} \\\\in \\\\mathbf{N}`} /> s.t. <MathJax.Node inline formula={`\\\\sum_{i = n_{0}}^{\\\\infty} \\\\frac{1}{2^{i}} < \\\\epsilon`} />. Define <MathJax.Node inline formula={`y=(x_{1},\\\\cdots x_{n_{0}}, x_{1},\\\\cdots x_{n_{0}}, \\\\cdots)`} />. \r\n                                        Observe <MathJax.Node inline formula={`d(x, y) < \\\\epsilon`} /> and <MathJax.Node inline formula={`T^{n_{0}}(y) = y`} />.\r\n                                    </li>\r\n                                    <li>\r\n                                        Let <MathJax.Node inline formula={`U,V`} /> be open in <MathJax.Node inline formula={`\\\\{0,1 \\\\}^{\\\\mathbf{N}}`} /> with <MathJax.Node inline formula={'x \\\\in U'}/> and <MathJax.Node inline formula={`y \\\\in V`} />. Let <MathJax.Node inline formula={`n_{0} \\\\in \\\\mathbf{N}`} /> as before. Then define \r\n                                        <MathJax.Node inline formula={`z=(x_{1}, x_{2}, \\\\cdots, x_{n_{0}}, y_{1}, y_{2}, \\\\cdots)`} />. Then <MathJax.Node inline formula={`z \\\\in U`} /> and <MathJax.Node inline formula={`T^{n_{0}}(z) \\\\in V`} />.\r\n                                    </li>\r\n                                    <li>\r\n                                        We now show sensitivity of initial conditions with sensitivity constant <MathJax.Node inline formula={`\\\\frac{1}{2}`} />. Let <MathJax.Node inline formula={`x \\\\in \\\\{0,1 \\\\}^{\\\\mathbf{N}}`} /> and define <MathJax.Node inline formula={`y = (x_{1}, x_{2}, \\\\cdots, x_{n_{0}}, 1-x_{n_{0}+1},1-x_{n_{0}+2}, \\\\cdots)`} />. Then <MathJax.Node inline formula={`|T^{n_{0}}(x)-T^{n_{0}}(y)| = 1 > \\\\frac{1}{2}`} /> yet <MathJax.Node inline formula={`d(x,y) < \\\\epsilon`} /> (for sufficiently\r\n                                        large <MathJax.Node inline formula={`n_{0}`} />.\r\n                                        )\r\n                                    </li>\r\n                                </ol>\r\n                                This completes the proof. I left out some quantifiers and definitions for <MathJax.Node inline formula={`\\\\epsilon > 0`} /> and <MathJax.Node inline formula={`n_{0}`} />, but it should be clear where they go (and if not, it would probably make a good exercise in finding where they go).\r\n                            </p>\r\n                        </div>\r\n\r\n                    </MathJax.Provider>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default MotivationChaos;","import logo from './logo.svg';\nimport 'video-react/dist/video-react.css'; // import css\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport '../node_modules/react-vis/dist/style.css';\nimport React from 'react';\nimport Lorenz from './Lorenz'\nimport Discrete from './Discrete'\nimport Home from './Home'\nimport Applications from './Applications'\nimport MotivationChaos from './MotivationChaos'\n\n\n\nclass App extends React.Component {\n\n  state = {\n    page: \"home\",\n  }\n\n  load_page = (page) => {\n    this.setState({\n      ...this.state,\n      page: page\n    })\n  }\n\n  render = () => {\n\n    let page_component;\n    if(this.state.page === \"home\"){\n      page_component = <Home></Home>\n    }else if(this.state.page === \"discrete\"){\n      page_component = <Discrete></Discrete>\n    }else if(this.state.page === \"motivationforchaos\"){\n      page_component = <MotivationChaos></MotivationChaos>\n    }else if(this.state.page === \"lorenz\"){\n      page_component = <Lorenz></Lorenz>\n    }else{\n      page_component = <Applications></Applications>\n    }\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\" onClick={ () => this.load_page(\"home\") }>Chaos</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\" onClick={ () => this.load_page(\"home\") }>Home</Nav.Link>\n            <Nav.Link href=\"#discretedynamicalsystems\" onClick={ () => this.load_page(\"discrete\") }>Discrete Dynamical Systems</Nav.Link>\n            <Nav.Link href=\"#motivationforchaos\" onClick={ () => this.load_page(\"motivationforchaos\") }>Chaos Theory</Nav.Link>\n            <Nav.Link href=\"#lorenzequation\" onClick={ () => this.load_page(\"lorenz\") }>Lorenz Equation</Nav.Link>\n            <Nav.Link href=\"#applications\" onClick={ () => this.load_page(\"applications\") }>Applications</Nav.Link>\n          </Nav>\n        </Navbar>\n        {page_component}\n      </div>\n    );\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}