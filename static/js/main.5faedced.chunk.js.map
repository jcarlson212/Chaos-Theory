{"version":3,"sources":["logo.svg","lorenz.jpg","Lorenzsimulation.mov","lorenz_x_vs_t.jpg","lorenz_y_vs_t.jpg","lorenz_z_vs_t.jpg","Lorenz.js","discrete_iteration_stable.jpg","iterations_pt_2.jpg","iterations_pt_3.jpg","stable_iterations.jpg","shartoski.PNG","shark_ex_3_pt.jpg","shark_ex_diff_eqn.jpg","Discrete.js","Home.js","brian-wissman-strange-attractors.jpg","henon_3.jpg","lorenz_sys.jpg","rossier_sys.jpg","edges.png","Islamic-Fractal-Star-Interlaced-full.jpg","Triadic_Cantor_Set.png","mandelbrot.gif","Applications.js","chaos_100_simulations.jpg","chaos_1000_simulations.jpg","chaos_10000_simulations.jpg","chaos_line_graph_100_iterations.jpg","chaos_line_graph_1000_iterations.jpg","new_double_map.jpg","new_tent_map_chaos.jpg","doubling_map_0003.jpg","unstable_iterate.jpg","MotivationChaos.js","about_image.jpg","About.js","App.js","reportWebVitals.js","index.js"],"names":["Lorenz","state","render","Jumbotron","fluid","Container","src","lorenz","style","maxWidth","Provider","playsInline","poster","Lorenzsimulation","muted","autoPlay","disableCompletely","lorenz_x_vs_t","border","lorenz_y_vs_t","lorenz_z_vs_t","React","Component","dynamic_def","Discrete","Node","formula","inline","discrete_iteration_stable","iterations_pt_2","iterations_pt_3","stable_iterations","shartoski","shark_ex_3_pt","shark_ex_diff_eqn","particle_container_height","particle_container_width","Home","data_red","data_blue","f","num","g","modify_particles","i","data_red_new","x","Math","floor","y","data_blue_new","setState","new_red_data","new_blue_data","height","width","data","color","push","random","setInterval","Applications","brianwissmanstrangeattractors","maxHeight","textAlign","edges","IslamicFractalStarInterlacedfull","Triadic_Cantor_Set","mandelbrot","henon_3","lorenz_sys","rossier_sys","MotivationChaos","chaos_100_simulations","chaos_1000_simulations","chaos_10000_simulations","chaos_line_graph_100_iterations","chaos_line_graph_1000_iterations","new_double_map","new_tent_map_chaos","doubling_map_0003","unstable_iterate","About","about_image","borderRadius","App","page","load_page","page_component","className","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","onClick","Toggle","aria-controls","Collapse","id","Nav","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5faedced.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/lorenz.a2144680.jpg\";","export default __webpack_public_path__ + \"static/media/Lorenzsimulation.e0f9719b.mov\";","export default __webpack_public_path__ + \"static/media/lorenz_x_vs_t.2c775a13.jpg\";","export default __webpack_public_path__ + \"static/media/lorenz_y_vs_t.c41fae6a.jpg\";","export default __webpack_public_path__ + \"static/media/lorenz_z_vs_t.d2b15dfa.jpg\";","import { Jumbotron, Container } from 'react-bootstrap';\r\nimport './App.css';\r\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { Player, ControlBar } from 'video-react';\r\nimport MathJax from 'react-mathjax'\r\nimport lorenz from './lorenz.jpg';\r\nimport Lorenzsimulation from './Lorenzsimulation.mov';\r\nimport lorenz_x_vs_t from './lorenz_x_vs_t.jpg';\r\nimport lorenz_y_vs_t from './lorenz_y_vs_t.jpg';\r\nimport lorenz_z_vs_t from './lorenz_z_vs_t.jpg';\r\n\r\n\r\nclass Lorenz extends React.Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    render = () => {\r\n      return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>Lorenz</h1>\r\n                    <i>\r\n                    In this section we will go over the history of Lorenz and his equations\r\n                    </i>\r\n                    <br/><br/>\r\n                    <img src={lorenz} style={{maxWidth: \"70%\"}} />\r\n                    <br/><br/>\r\n                    <MathJax.Provider>\r\n                        <div>\r\n                        <Player\r\n                            playsInline\r\n                            poster=\"/assets/poster.png\"\r\n                            src={Lorenzsimulation}\r\n                            muted={true}\r\n                            autoPlay={true}\r\n                            playsInline={true}\r\n\r\n                        >\r\n                            <ControlBar disableCompletely={true} />\r\n                        </Player>\r\n                        <br/><br/>\r\n                        <img src={lorenz_x_vs_t} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                        <br/><br/>\r\n                        <img src={lorenz_y_vs_t} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                        <br/><br/>\r\n                        <img src={lorenz_z_vs_t} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                        </div>\r\n\r\n                    </MathJax.Provider>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Lorenz;\r\n  ","export default __webpack_public_path__ + \"static/media/discrete_iteration_stable.3e9d04b9.jpg\";","export default __webpack_public_path__ + \"static/media/iterations_pt_2.4f848f38.jpg\";","export default __webpack_public_path__ + \"static/media/iterations_pt_3.9911ba8c.jpg\";","export default __webpack_public_path__ + \"static/media/stable_iterations.41c3c963.jpg\";","export default __webpack_public_path__ + \"static/media/shartoski.6a673089.PNG\";","export default __webpack_public_path__ + \"static/media/shark_ex_3_pt.d5397434.jpg\";","export default __webpack_public_path__ + \"static/media/shark_ex_diff_eqn.735fb62e.jpg\";","import './App.css';\r\nimport { Jumbotron, Container, Image } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport MathJax from 'react-mathjax'\r\nimport discrete_iteration_stable from './discrete_iteration_stable.jpg';\r\nimport iterations_pt_2 from './iterations_pt_2.jpg';\r\nimport iterations_pt_3 from './iterations_pt_3.jpg';\r\nimport stable_iterations from './stable_iterations.jpg';\r\nimport shartoski from './shartoski.PNG';\r\nimport shark_ex_3_pt from './shark_ex_3_pt.jpg';\r\nimport shark_ex_diff_eqn from './shark_ex_diff_eqn.jpg';\r\n\r\nconst tex = `f(x) = \\\\int_{-\\\\infty}^\\\\infty\r\n\\\\hat f(\\\\xi)\\\\,e^{2 \\\\pi i \\\\xi x}\r\n\\\\,d\\\\xi`\r\n\r\nconst dynamic_def = `x_{n+1} = f(x_{n})`\r\n\r\nclass Discrete extends React.Component {\r\n    state = {\r\n        \r\n    }\r\n    render = () => {\r\n      return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>Discrete Dynamical Systems</h1>\r\n                    <i>\r\n                    In this section we will go over the basics of Discrete Dynamical Systems\r\n                    </i>\r\n                    <br/><br/>\r\n                    <MathJax.Provider>\r\n                        <div>\r\n                            <p>To start, we present the basic definition of a discrete dynamical system:</p>\r\n                            <p>Definition 1. A discrete dynamical system is given by the equation <MathJax.Node formula={dynamic_def} />\r\n                                where <MathJax.Node inline formula={`f: M \\\\rightarrow M`} /> for any arbitrary metric space <MathJax.Node inline formula={`M`} />\r\n                                and <MathJax.Node inline formula={`n \\\\in \\\\mathbf{N}`} />\r\n                            </p>\r\n                            <p>For the remainder of our discussion, we will always assume <MathJax.Node inline formula={`f`} /> is a continuous function\r\n                                and <MathJax.Node inline formula={`M = R^{n}`} />\r\n                            </p>\r\n                            <p>Proposition 2. Let <MathJax.Node inline formula={`f \\\\in C^{1}(\\\\mathbf{R})`} /> and have a fixed point <MathJax.Node inline formula={`x_{0}`} />.\r\n                                Then <MathJax.Node inline formula={`x_0{}`} /> is a sink if <MathJax.Node inline formula={`|f'(x_{0})| < 1`} />, a source if <MathJax.Node inline formula={`|f'(x_{0})| > 1`} />,\r\n                                and otherwise we cannot conclude anything.\r\n                            </p>\r\n                            <p>\r\n                                Proof: This proposition is pretty trivial. Just choose <MathJax.Node inline formula={`\\\\delta > 0`} /> s.t. <MathJax.Node inline formula={`|f'(x) - f'(x_{0})| < \\\\epsilon`} /> for all <MathJax.Node inline formula={`x \\\\in B_{\\\\delta}(x_{0})`} />. Then\r\n                                we can assume <MathJax.Node inline formula={`f'(x)`} /> has the same sign as <MathJax.Node inline formula={`f'(x_{0})`} /> for <MathJax.Node inline formula={`x \\\\in B_{\\\\delta}(x_{0})`} />. Thus, for <MathJax.Node inline formula={`x \\\\in B_{\\\\delta}(x_{0})`} />\r\n                                we have <MathJax.Node inline formula={`|x-x_{0}|\\\\cdot (|f'(x_{0})| - \\\\epsilon) \\\\leq |f(x) - f(x_{0})| \\\\leq |x-x_{0}|\\\\cdot (|f'(x_{0})| + \\\\epsilon) `} />. If <MathJax.Node inline formula={`|f'(x_{0})| > 1`} />, we get the\r\n                                difference between the <MathJax.Node inline formula={`f`} /> values in absolute value is larger than the absolute difference in the <MathJax.Node inline formula={`x`} /> values. The opposite happens if <MathJax.Node inline formula={`|f'(x_{0})|<1`} />.\r\n                                <br/>\r\n\r\n                                When <MathJax.Node inline formula={`|f'(x_{0})| = 1`} />, things become too sensitive (the derivitive can immediately become larger or smaller in absolute value). So we can't really\r\n                                conclude anything. The following examples illustrate this:\r\n                            </p>\r\n                            <img src={discrete_iteration_stable} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <img src={iterations_pt_2} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <img src={iterations_pt_3} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <p>Below we have an example of a stable point for <MathJax.Node inline formula={`f(x) = 1.5\\\\cdot \\\\sin(x-1)`} /> at <MathJax.Node inline formula={`x_{0} = -1.20675`} />. Since <MathJax.Node inline formula={`f'(x) = 1.5\\\\cdot \\\\cos(x-1)`} />, \r\n                            <MathJax.Node inline formula={`|f'(x_{0})| = |-.89| < 1`} /> - so by our proposition this should be a stable fixed point, as the following picture shows:\r\n                             </p>\r\n                             <br/><br/>\r\n                            <img src={stable_iterations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <p>Sharkovskii Theorem. Let <MathJax.Node inline formula={`f: I \\\\to I`} /> continuous for some interval <MathJax.Node inline formula={`I \\\\subset R`} />. Consider\r\n                            the following ordering of the natural numbers (which is a total order, but not well-ordered):\r\n                            </p>\r\n                            <br/><br/>\r\n                            <img src={shartoski} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <p>If <MathJax.Node inline formula={`f`} /> has a periodic point of length m then <MathJax.Node inline formula={`f`} /> will have a periodic point of length n for all\r\n                            <MathJax.Node inline formula={`n > m`} />.\r\n                            </p>\r\n                            <p>The following is an example of a function with a period of length three (<MathJax.Node inline formula={`f(x)=-\\\\frac{19}{30}x^{2}+\\\\frac{51}{10}-\\\\frac{8}{3}`} />):</p>\r\n                            <br/><br/>\r\n                            <img src={shark_ex_3_pt} style={{maxWidth: \"70%\", border:\"2px solid black\"}}/>\r\n                            <br/>\r\n                            <br/>\r\n                            <p>Here is another way of visualizing it:</p>\r\n                            <br/><br/>\r\n                            <img src={shark_ex_diff_eqn} style={{maxWidth: \"70%\", border:\"2px solid black\"}}/>\r\n                        </div>\r\n\r\n                    </MathJax.Provider>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Discrete;\r\n  ","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport {XYPlot, LineSeries, MarkSeries, HeatmapSeries} from 'react-vis';\r\n\r\nconst particle_container_height = 700;\r\nconst particle_container_width = 1000;\r\nconst particle_count = 50;\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        data_red: [],\r\n        data_blue: []\r\n    }\r\n\r\n    constructor(){\r\n        super()\r\n        let data_red = []\r\n        let i=0;\r\n        for(i =0; i < particle_count; i++){\r\n            data_red.push({\r\n                x: Math.random()*particle_container_width/2,\r\n                y: Math.random()*particle_container_height\r\n            })\r\n        }\r\n        let data_blue = []\r\n        i=0;\r\n        for(i =0; i < particle_count; i++){\r\n            data_blue.push({\r\n                x: Math.random()*particle_container_width/2 + particle_container_width/2,\r\n                y: Math.random()*particle_container_height\r\n            })\r\n        }\r\n        this.state.data_red = data_red\r\n        this.state.data_blue = data_blue\r\n        setInterval(this.modify_particles, 200);\r\n    }\r\n\r\n    f = (num) => {\r\n        num = num / (1.0*particle_container_width);\r\n        num = 4.0*num*(1 - num);\r\n        num = num*particle_container_width;\r\n        return num;\r\n    }\r\n\r\n    g = (num) => {\r\n        num = num / (1.0*particle_container_height);\r\n        num = 4.0*num*(1 - num);\r\n        num = num*particle_container_height;\r\n        return num;\r\n    }\r\n\r\n    modify_particles = () => {\r\n        let data_red_new = this.state.data_red;\r\n        let i;\r\n        for(i =0; i < particle_count; i++){\r\n            data_red_new[i] = {\r\n                x: Math.floor(this.f(data_red_new[i].x)),\r\n                y: Math.floor(this.g(data_red_new[i].y))\r\n            };\r\n        }\r\n        let data_blue_new = this.state.data_blue;\r\n        for(i =0; i < particle_count; i++){\r\n            data_blue_new[i] = {\r\n                x: Math.floor(this.f(data_blue_new[i].x)),\r\n                y: Math.floor(this.g(data_blue_new[i].y))\r\n            };\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            data_red: data_red_new,\r\n            data_blue: data_blue_new\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        const new_red_data = this.state.data_red;\r\n        const new_blue_data = this.state.data_blue;\r\n        return (\r\n            <div>\r\n                <Jumbotron fluid>\r\n                    <Container>\r\n                        <h1>Chaos</h1>\r\n                        <i>\r\n                        This is a website we made for our final project on Chaos Theory\r\n                        </i>\r\n                        <XYPlot height={particle_container_height} width={particle_container_width}>\r\n                            <HeatmapSeries data={new_red_data} color=\"black\" />\r\n                            <HeatmapSeries data={new_blue_data} color=\"red\" />\r\n                        </XYPlot>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n  \r\n  export default Home;\r\n  ","export default __webpack_public_path__ + \"static/media/brian-wissman-strange-attractors.aee79580.jpg\";","export default __webpack_public_path__ + \"static/media/henon_3.477056f4.jpg\";","export default __webpack_public_path__ + \"static/media/lorenz_sys.70c5f984.jpg\";","export default __webpack_public_path__ + \"static/media/rossier_sys.b8f705b4.jpg\";","export default __webpack_public_path__ + \"static/media/edges.ba41d9af.png\";","export default __webpack_public_path__ + \"static/media/Islamic-Fractal-Star-Interlaced-full.1e71d031.jpg\";","export default __webpack_public_path__ + \"static/media/Triadic_Cantor_Set.511664f3.png\";","export default __webpack_public_path__ + \"static/media/mandelbrot.4ba6dff8.gif\";","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\nimport MathJax from 'react-mathjax'\r\nimport React from 'react';\r\nimport brianwissmanstrangeattractors from './brian-wissman-strange-attractors.jpg';\r\nimport henon_3 from './henon_3.jpg';\r\nimport lorenz_sys from './lorenz_sys.jpg';\r\nimport rossier_sys from './rossier_sys.jpg';\r\nimport edges from './edges.png';\r\nimport IslamicFractalStarInterlacedfull from './Islamic-Fractal-Star-Interlaced-full.jpg';\r\nimport Triadic_Cantor_Set from './Triadic_Cantor_Set.png';\r\nimport mandelbrot from './mandelbrot.gif'\r\nclass Applications extends React.Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    render = () => {\r\n      return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>Hausdorff Dimension and Strange Attractors</h1>\r\n                    <i>\r\n                    In this section we will talk about what it means to be a fractal and how it relates to Strange Attractors\r\n                    </i><br/>\r\n                    <img src={brianwissmanstrangeattractors} style={{maxWidth:\"75%\", maxHeight:\"300px\", border:\"2px solid black\"}}/>\r\n                    <br/><br/>\r\n                    <MathJax.Provider>\r\n                        <div>\r\n                            <p style={{textAlign:\"left\"}}>To start, we define the Hausdorff dimension of an open nonempty subspace of <MathJax.Node inline formula={`R^{n}`} /> for <MathJax.Node inline formula={`n \\\\geq 2`} /> :</p>\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                For any nonempty open set <MathJax.Node inline formula={`U \\\\subset R^{n}`} /> we define the diameter\r\n                                of <MathJax.Node inline formula={`U`} /> to be <MathJax.Node inline formula={`d(U) = \\\\sup_{x \\\\in U,\\\\text{ } y \\\\in U} |x - y|`} />. For any open cover <MathJax.Node inline formula={`\\\\{V_{i}\\\\}_{i \\\\in I}`} />\r\n                                of <MathJax.Node inline formula={`U`} />, we say it is a <MathJax.Node inline formula={`\\\\delta`} />-cover if it is a countable cover and if the diameter of every set is less than <MathJax.Node inline formula={`\\\\delta`} />.\r\n                                Define,\r\n                                <MathJax.Node formula={`\\\\mu^{\\\\alpha}(U) = \\\\lim_{\\\\delta \\\\to 0} \\\\inf{\\\\{\\\\sum_{j}d(V_{j})\\\\text{ }|\\\\text{ such that } \\\\{V_{j}\\\\} \\\\text{ is a delta cover of U} \\\\}}`} />\r\n                                This defines a premeasure on all open sets <MathJax.Node inline formula={`U`} /> in the subspace topology of <MathJax.Node inline formula={`M`} />. Hence, we get a borel <MathJax.Node inline formula={`\\\\sigma`} />-algebra \r\n                                on the set of all subsets that are \"nice\" (<MathJax.Node inline formula={`\\\\mu^{\\\\alpha}(A) = \\\\mu^{\\\\alpha}(A-B) + \\\\mu^{\\\\alpha}(B-A)`} /> for all <MathJax.Node inline formula={`A`} /> implies <MathJax.Node inline formula={`B`} /> is in our sigma algebra)\r\n                                by Caratheodory's Theorem, with <MathJax.Node inline formula={`\\\\mu^{\\\\alpha}`} /> a measure on this sigma algebra.\r\n                                The Hausdorff dimension of <MathJax.Node inline formula={`U`} /> is defined as <MathJax.Node inline formula={`\\\\dim_{H}(U) = \\\\inf \\\\{\\\\alpha\\\\text{ }|\\\\text{ } \\\\mu^{\\\\alpha}(U) = 0\\\\} = \\\\sup \\\\{\\\\alpha\\\\text{ }|\\\\text{ } \\\\mu^{\\\\alpha}(U) = \\\\infty\\\\}`} />. We can define this for closed sets with infinitely many \r\n                                points analagously. For finitely many points, there can be some difficulties - namely the sup that is shown below might not be well-defined, but in the grand scheme of things this is not at all an issue.\r\n                            </p>\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                Proposition: <MathJax.Node inline formula={`dim_{H}(U)`} /> makes sense (the equality in particular)<br/><br/>\r\n                                Proof: Consider <MathJax.Node inline formula={`\\\\mu^{\\\\alpha}(U) < \\\\infty`} /> for some <MathJax.Node inline formula={`\\\\alpha`} />. Let <MathJax.Node inline formula={`\\\\beta > \\\\alpha`} />. Then for <MathJax.Node inline formula={`\\\\delta > 0\\\\text{, } \\\\mu_{\\\\delta}^{\\\\beta}(U) = \\\\lim_{\\\\delta \\\\to 0}\\\\inf\\\\{\\\\sum_{j} d(V_{j})^{\\\\beta}\\\\text{ }|\\\\text{ }\\\\{V_{j}\\\\}\\\\text{ a delta cover of U} \\\\} \\\\leq \\\\lim_{\\\\delta\\\\to 0}\\\\delta^{\\\\beta - \\\\alpha}\\\\inf\\\\{\\\\sum_{j} d(V_{j})^{\\\\beta}\\\\text{ }|\\\\text{ }\\\\{V_{j}\\\\}\\\\text{ a delta cover of U} \\\\} = 0\\\\text{ }`} /> \r\n                                since <MathJax.Node inline formula={`\\\\delta^{\\\\beta - \\\\alpha} \\\\to 0 \\\\text{ as } \\\\delta \\\\to 0`} /> and the other part of the inf is finite. For <MathJax.Node inline formula={`\\\\beta < \\\\alpha`} />, we get the same thing but a factor of <MathJax.Node inline formula={`\\\\delta^{\\\\beta - \\\\alpha}`} />, which goes to infinity as <MathJax.Node inline formula={`\\\\delta \\\\to 0`} />. \r\n                                So what remains is to prove that such a value exists. Since <MathJax.Node inline formula={`U`} /> open and nonempty (and <MathJax.Node inline formula={`n \\\\geq 2`} /> ), it follows that <MathJax.Node inline formula={'U'} /> contains infinitely many points. \r\n                                So <MathJax.Node inline formula={`\\\\mu^{0}(U) = \\\\infty`} />. Also, <MathJax.Node inline formula={`\\\\mu^{n+1}(U) = 0`} /> since <MathJax.Node inline formula={`U`} /> is an open subset of n-dimensional Euclidean space and the ball in such a space has finite Hausdorff dimension. So the sup and inf are defined and equal.\r\n                            </p>\r\n\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                Proposition: <MathJax.Node inline formula={`\\\\dim_{H}(B_{1}(0)) = n`} /> <br/><br/>\r\n                                Proof: <MathJax.Node formula={`\\\\mu^{n}(B_{1}(0)) = \\\\lim_{\\\\delta\\\\to 0}\\\\inf\\\\{\\\\sum_{j} d(V_{j})^{n}\\\\text{ }|\\\\text{ }\\\\{V_{j}\\\\} \\\\text{ a delta cover of U} \\\\} = d(B_{1}(0))^{n} < \\\\infty`} /> Since only one such value can be finite (from above), we are done. \r\n                            </p>\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                Notice that the Hausdorff dimension of a space is really just a measure of how rough the space is relative to the ambient space - for if there are too many \"approximate hyperplanes\" in the subspace, then the hasudorff dimension will be lowered, averaging the \"higher dimensional\" parts with the \"lower dimensional\" parts. To give you an idea of this, consider the following sequence of shapes:\r\n                                <br/><br/>\r\n                            </p>\r\n                                <img src={edges} style={{maxWidth: \"70%\", border:\"2px solid black\"}}/>\r\n                                <br/><br/>\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                Notice how as we add triangles to our \"star\", our flaps become more 1-dimensional. If we keep the ends of some finite number of flaps in the original shape (say 6) and then repeat this process on the interior, we will eventially get a fractal looking somewhat like the following:\r\n                            </p>\r\n                                <img src={IslamicFractalStarInterlacedfull} style={{maxWidth: \"30%\", border:\"2px solid black\"}}/>\r\n                                <br/><br/>\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                except some of the spots will be filled. This eventually will have parts that are too jagged if we increase the number of sides quick enough at each iteration. This is why many - but not all - fractals have fractional dimension. A famous one that has fractional dimension (most known ones do) is the Cantor set, with <MathJax.Node inline formula={`\\\\dim_{H}(C) = \\\\log_{3}(2)`} /> :\r\n                            </p>\r\n                            <img src={Triadic_Cantor_Set} style={{maxWidth: \"70%\"}}/>\r\n                            <br/><br/>\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                The Cantor set is defined as <MathJax.Node inline formula={`C = \\\\cap_{i=0}^{\\\\infty} \\\\cup_{j=0, j \\\\neq 1 \\\\mod{2}}^{3^{i}} [\\\\frac{j}{3^{i}}, \\\\frac{j+1}{3^{i}}]` } />. This is a nowhere dense set with measure zero. An example of a fractal with integer Hasudorff dimension is the boundary of the Mendelbrot set, which has Hausdorff dimension 2:\r\n                            </p>\r\n                            <img src={mandelbrot} style={{maxWidth: \"70%\"}}/>\r\n                            <br/><br/>\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                Such fractals we will not consider fractals, but are worth being aware of. An interesting question worth asking is if there are any connections to algebraic topology. The tempting answer to this is no since many of the interesting properties of these spaces are inherently related to the metric, not the Topology of the space itself since locally things are not so nice. However, there are \r\n                                interesting questions one can ask if we restrict ourselves a bit: Define the well-behaved fundamental group <MathJax.Node inline formula={`\\\\pi_{U}^{wb}(x_{0}) = \\\\{[f]: I \\\\to U | f(0) = x_{0},\\\\text{ }f\\\\text{ continuous, and } \\\\dim_{H}(K) = 1\\\\text{ } \\\\forall{K \\\\subset f(I)}\\\\text{ open} \\\\}`} />. This well-behaved fundamental group is fundamentally different from the usual fundamental group since being path-connected \r\n                                does not imply points have the same simple fundamental group. An example would be points that are connected through fractal that has fractional dimension. We can also form a \"badly-behaved\" fundamental group by taking paths that have fractional dimension along all open subsets of their image. The big question is if there is a natural decomposition of the original fundamental group into these two - or perhaps if we abelianize everything \r\n                                using the power of singular homology things decompose... I suspect the answer is no because there might be paths that are neither well-behaved nor badly-behaved, but how does this occur?\r\n                            </p>\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                We now turn to the whole point of us understanding what the Hausorff dimension of an open nonempty subspace of <MathJax.Node inline formula={`R^{n}`} />; we say an attractor <MathJax.Node inline formula={`\\\\Lambda`} /> is strange if the dynamical system <MathJax.Node inline formula={`(\\\\Lambda, f)`} /> is chaotic and <MathJax.Node inline formula={`\\\\Lambda`} /> is a fractal. \r\n                                <MathJax.Node inline formula={`\\\\Lambda`} /> is said to be fractal if <MathJax.Node inline formula={`\\\\dim_{H}(\\\\Lambda)`} /> is not an integer.\r\n                            </p>\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                <MathJax.Node inline formula={`\\\\Lambda`} /> is said to be attracting if it is compact and invariant under <MathJax.Node inline formula={`f`}/> (<MathJax.Node inline formula={`f(\\\\Lambda) = \\\\Lambda`} />) and there is a neighborhood <MathJax.Node inline formula={`U`} /> of <MathJax.Node inline formula={`\\\\Lambda`} /> s.t. <MathJax.Node inline formula={`d(f^{n}(x), \\\\Lambda)\\\\to 0`} /> as <MathJax.Node inline formula={`n \\\\to \\\\infty`} /> for all <MathJax.Node inline formula={`x\\\\in U`} />. Note that this d\r\n                                is not the diameter, but rather a metric. The definition of a repeller is analagous, so we won't spend any time on it. To give a basic example of an attracting set, just consider the set <MathJax.Node inline formula={`\\\\Lambda = \\\\{0\\\\}`} /> and the function <MathJax.Node inline formula={`f(x) = x^{2\\\\cdot{n}+1}`} />. <MathJax.Node inline formula={`f(0) = 0`} /> and <MathJax.Node inline formula={`(-\\\\frac{1}{2}, \\\\frac{1}{2})`} /> is the desired neighborhood.\r\n                            </p>\r\n                            <p style={{textAlign:\"left\"}}>\r\n                                Below we have a few of the famous Strange Attractors in no particular order.\r\n                            </p>\r\n                            <img src={henon_3} style={{maxWidth: \"70%\", border:\"2px solid black\"}}/>\r\n                            <br/><br/>\r\n                            <img src={lorenz_sys} style={{maxWidth: \"70%\", border:\"2px solid black\"}}/>\r\n                            <br/><br/>\r\n                            <img src={rossier_sys} style={{maxWidth: \"70%\", border:\"2px solid black\"}}/>\r\n                            <br/><br/>\r\n\r\n                        </div>\r\n\r\n                    </MathJax.Provider>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Applications;\r\n  ","export default __webpack_public_path__ + \"static/media/chaos_100_simulations.9f005df9.jpg\";","export default __webpack_public_path__ + \"static/media/chaos_1000_simulations.a3bf0692.jpg\";","export default __webpack_public_path__ + \"static/media/chaos_10000_simulations.e7f81830.jpg\";","export default __webpack_public_path__ + \"static/media/chaos_line_graph_100_iterations.f3d67590.jpg\";","export default __webpack_public_path__ + \"static/media/chaos_line_graph_1000_iterations.9871f1dc.jpg\";","export default __webpack_public_path__ + \"static/media/new_double_map.a33797ce.jpg\";","export default __webpack_public_path__ + \"static/media/new_tent_map_chaos.078d8f2e.jpg\";","export default __webpack_public_path__ + \"static/media/doubling_map_0003.2365dca8.jpg\";","export default __webpack_public_path__ + \"static/media/unstable_iterate.8fa8f55e.jpg\";","import { Jumbotron, Container, Image } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport MathJax from 'react-mathjax'\r\nimport './App.css';\r\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\r\nimport chaos_100_simulations from './chaos_100_simulations.jpg'\r\nimport chaos_1000_simulations from './chaos_1000_simulations.jpg'\r\nimport chaos_10000_simulations from './chaos_10000_simulations.jpg'\r\nimport chaos_line_graph_100_iterations from './chaos_line_graph_100_iterations.jpg'\r\nimport chaos_line_graph_1000_iterations from './chaos_line_graph_1000_iterations.jpg'\r\nimport new_double_map from './new_double_map.jpg'\r\nimport new_tent_map_chaos from './new_tent_map_chaos.jpg'\r\nimport doubling_map_0003 from './doubling_map_0003.jpg';\r\nimport unstable_iterate from './unstable_iterate.jpg';\r\n\r\nclass MotivationChaos extends React.Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    render = () => {\r\n      return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>Chaos Theory</h1>\r\n                    <i>\r\n                    In this section we will go over the main reasons Chaos Theory is worthwhile\r\n                    </i>\r\n                    <br/><br/>\r\n                    <MathJax.Provider>\r\n                        <div>\r\n                            <p>We begin with the definition of a chaotic function <MathJax.Node inline formula={`f:[a,b] \\\\to [a,b]`} />; such\r\n                             a function is said to be Chaotic if it is continuous and satisfies the following three conditions: </p>\r\n                             <ol style={{textAlign:\"left\"}}>\r\n                                 <li>\r\n                                     Periodic points of <MathJax.Node inline formula={`f`} /> are dense in <MathJax.Node inline formula={`[a,b]`} /> - in other words,\r\n                                     any <MathJax.Node inline formula={`x \\\\in [a,b]`} /> can be approximated by a point <MathJax.Node inline formula={`y \\\\in [a,b]`} /> s.t. \r\n                                     <MathJax.Node inline formula={`y`} /> is periodic <MathJax.Node inline formula={`(f^{m}(y) = y`} /> for some <MathJax.Node inline formula={`m\\\\in \\\\mathbf{N})`} />\r\n                                 </li>\r\n                                 <li>\r\n                                     For any open sets <MathJax.Node inline formula={`U_{1}`} />, <MathJax.Node inline formula={`U_{2}`} /> there exists <MathJax.Node inline formula={`x \\\\in U_{1}`} />\r\n                                     s.t. <MathJax.Node inline formula={`f^{m}(x) \\\\in U_{2}`} /> for some <MathJax.Node inline formula={`m \\\\in \\\\mathbf{N}`} />\r\n                                 </li>\r\n                                 <li>\r\n                                     There exists some <MathJax.Node inline formula={`\\\\beta > 0`} /> s.t. for any <MathJax.Node inline formula={`x_{0} \\\\in [a,b]`} /> and neighborhood <MathJax.Node inline formula={`U`} />\r\n                                     of <MathJax.Node inline formula={`x_{0}`} /> there exists some <MathJax.Node inline formula={`y_{0} \\\\in U`} /> s.t. <MathJax.Node inline formula={`|f(x_{0}) - f(y_{0})| > \\\\beta`} />.\r\n                                 </li>\r\n                             </ol>\r\n                             <p>\r\n                                 Roughly speaking, this means that the initial conditions are sensitive and arbitrarily small regions visit every other region. The initial conditions are sensitive in the sense that\r\n                                 if you try to approximate an input value, that approximation is not guranteed to work nomatter how accurate it is.\r\n                             </p>\r\n                             <br/><br/>\r\n                            <img src={chaos_100_simulations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <img src={chaos_1000_simulations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <img src={chaos_10000_simulations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <img src={chaos_line_graph_100_iterations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <img src={chaos_line_graph_1000_iterations} style={{maxWidth: \"70%\", border:\"2px solid black\"}} />\r\n                            <br/><br/>\r\n\r\n                            <img src={new_double_map} style={{maxWidth: \"70%\", border: \"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <img src={new_tent_map_chaos} style={{maxWidth: \"70%\", border: \"2px solid black\"}} />\r\n                            <br/><br/>\r\n\r\n                            <p>\r\n                                Lets now consider an interesting map: the shift map. Define the shift map <MathJax.Node inline formula={`T: \\\\{0,1 \\\\}^{\\\\mathbf{N}} \\\\to \\\\{0,1 \\\\}^{\\\\mathbf{N}}`} /> is given by <MathJax.Node inline formula={`T((x_{1}, x_{2},\\\\cdots)) = (x_{2}, x_{3}, \\\\cdots)`} />.\r\n                                To make <MathJax.Node inline formula={`\\\\{0,1 \\\\}^{\\\\mathbf{N}}`} /> a metric space, we will define a metric <MathJax.Node inline formula={`d: \\\\{0,1 \\\\}^{\\\\mathbf{N}} \\\\times \\\\{0,1 \\\\}^{\\\\mathbf{N}} \\\\to \\\\mathbf{R}^{\\\\geq 0}`} /> by <MathJax.Node inline formula={`d((x_{1}, \\\\cdots), (y_{1}, \\\\cdots)) = \\\\sum_{i=1}^{\\\\infty} \\\\frac{1}{2^{i}}|x_{i} - y_{i}|`} />.\r\n                                The fact that this is a metric space is trivial and the fact that the shift map is continuous is a standard exercise. More interestingly, we show that <MathJax.Node inline formula={`T`} /> yeilds a chaotic differential equation:<br/><br/>\r\n                                <ol style={{textAlign: \"left\"}}>\r\n                                    <li>\r\n                                        We first show periodic orbits are dense. To see this, let <MathJax.Node inline formula={`x=(x_{1}, x_{2}, \\\\cdots) \\\\in \\\\{0,1 \\\\}^{\\\\mathbf{N}}`} />. Let <MathJax.Node inline formula={`n_{0} \\\\in \\\\mathbf{N}`} /> s.t. <MathJax.Node inline formula={`\\\\sum_{i = n_{0}}^{\\\\infty} \\\\frac{1}{2^{i}} < \\\\epsilon`} />. Define <MathJax.Node inline formula={`y=(x_{1},\\\\cdots x_{n_{0}}, x_{1},\\\\cdots x_{n_{0}}, \\\\cdots)`} />. \r\n                                        Observe <MathJax.Node inline formula={`d(x, y) < \\\\epsilon`} /> and <MathJax.Node inline formula={`T^{n_{0}}(y) = y`} />.\r\n                                    </li>\r\n                                    <li>\r\n                                        Let <MathJax.Node inline formula={`U,V`} /> be open in <MathJax.Node inline formula={`\\\\{0,1 \\\\}^{\\\\mathbf{N}}`} /> with <MathJax.Node inline formula={'x \\\\in U'}/> and <MathJax.Node inline formula={`y \\\\in V`} />. Let <MathJax.Node inline formula={`n_{0} \\\\in \\\\mathbf{N}`} /> as before. Then define \r\n                                        <MathJax.Node inline formula={`z=(x_{1}, x_{2}, \\\\cdots, x_{n_{0}}, y_{1}, y_{2}, \\\\cdots)`} />. Then <MathJax.Node inline formula={`z \\\\in U`} /> and <MathJax.Node inline formula={`T^{n_{0}}(z) \\\\in V`} />.\r\n                                    </li>\r\n                                    <li>\r\n                                        We now show sensitivity of initial conditions with sensitivity constant <MathJax.Node inline formula={`\\\\frac{1}{2}`} />. Let <MathJax.Node inline formula={`x \\\\in \\\\{0,1 \\\\}^{\\\\mathbf{N}}`} /> and define <MathJax.Node inline formula={`y = (x_{1}, x_{2}, \\\\cdots, x_{n_{0}}, 1-x_{n_{0}+1},1-x_{n_{0}+2}, \\\\cdots)`} />. Then <MathJax.Node inline formula={`|T^{n_{0}}(x)-T^{n_{0}}(y)| = 1 > \\\\frac{1}{2}`} /> yet <MathJax.Node inline formula={`d(x,y) < \\\\epsilon`} /> (for sufficiently\r\n                                        large <MathJax.Node inline formula={`n_{0}`} />.\r\n                                        )\r\n                                    </li>\r\n                                </ol>\r\n                                This completes the proof. I left out some quantifiers and definitions for <MathJax.Node inline formula={`\\\\epsilon > 0`} /> and <MathJax.Node inline formula={`n_{0}`} />, but it should be clear where they go (and if not, it would probably make a good exercise in finding where they go).\r\n                            </p>\r\n                            <br/><br/>\r\n                            <img src={doubling_map_0003} style={{maxWidth: \"70%\", border: \"2px solid black\"}} />\r\n                            <br/><br/>\r\n                            <img src={unstable_iterate} style={{maxWidth: \"70%\", border: \"2px solid black\"}} />\r\n                        </div>\r\n\r\n                    </MathJax.Provider>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default MotivationChaos;","export default __webpack_public_path__ + \"static/media/about_image.a3b8014e.jpg\";","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport about_image from './about_image.jpg';\r\n\r\nclass About extends React.Component {\r\n    state = {\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <Jumbotron fluid>\r\n                    <Container>\r\n                        <div style={{height:\"700px\"}}>\r\n                        <h1>About</h1>\r\n                        <img src={about_image} style={{maxWidth: \"30%\", border: \"1px solid black\", borderRadius: \"10%\"}}/>\r\n                        <br/><br/>\r\n                        <p>The authors of this website are Brian Carlson and Jason Carlson. If you have any questions feel free to email jcarlson212@gmail.com or bcarls11@asu.edu</p>\r\n                        </div>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n  \r\n  export default About;","import logo from './logo.svg';\nimport 'video-react/dist/video-react.css'; // import css\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport '../node_modules/react-vis/dist/style.css';\nimport React from 'react';\nimport Lorenz from './Lorenz'\nimport Discrete from './Discrete'\nimport Home from './Home'\nimport Applications from './Applications'\nimport MotivationChaos from './MotivationChaos'\nimport About from './About'\n\nclass App extends React.Component {\n\n  state = {\n    page: \"home\",\n  }\n\n  load_page = (page) => {\n    this.setState({\n      ...this.state,\n      page: page\n    })\n  }\n\n  render = () => {\n\n    let page_component;\n    if(this.state.page === \"home\"){\n      page_component = <Home></Home>\n    }else if(this.state.page === \"discrete\"){\n      page_component = <Discrete></Discrete>\n    }else if(this.state.page === \"motivationforchaos\"){\n      page_component = <MotivationChaos></MotivationChaos>\n    }else if(this.state.page === \"lorenz\"){\n      page_component = <Lorenz></Lorenz>\n    }else if(this.state.page == \"about\"){\n      page_component = <About></About>\n    }else{\n      page_component = <Applications></Applications>\n    }\n    return (\n      <div className=\"App\">\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\" onClick={ () => this.load_page(\"home\") }>Chaos</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\" onClick={ () => this.load_page(\"home\") }>Home</Nav.Link>\n            <Nav.Link href=\"#discretedynamicalsystems\" onClick={ () => this.load_page(\"discrete\") }>Discrete Dynamical Systems</Nav.Link>\n            <Nav.Link href=\"#motivationforchaos\" onClick={ () => this.load_page(\"motivationforchaos\") }>Chaos Theory</Nav.Link>\n            <Nav.Link href=\"#lorenzequation\" onClick={ () => this.load_page(\"lorenz\") }>Lorenz Equation</Nav.Link>\n            <Nav.Link href=\"#applications\" onClick={ () => this.load_page(\"applications\") }>Hausdorff Dimension and Strange Attractors</Nav.Link>\n            <Nav.Link href=\"#About\" onClick={ () => this.load_page(\"about\") }>About</Nav.Link>\n          </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        {page_component}\n      </div>\n    );\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}